/**
 * Client automatically generated by SDKgen please do not edit this file manually
 * {@link https://sdkgen.app}
 */

import axios, {AxiosRequestConfig} from "axios";
import {ClientAbstract, TokenStoreInterface} from "sdkgen-client"
import {ClientException, UnknownStatusCodeException} from "sdkgen-client";

import {AccountTag} from "./AccountTag";
import {TransactionTag} from "./TransactionTag";
import {SubscriptionTag} from "./SubscriptionTag";
import {ScopeTag} from "./ScopeTag";
import {PlanTag} from "./PlanTag";
import {PaymentTag} from "./PaymentTag";
import {PageTag} from "./PageTag";
import {LogTag} from "./LogTag";
import {GrantTag} from "./GrantTag";
import {EventTag} from "./EventTag";
import {AppTag} from "./AppTag";

export class Client extends ClientAbstract {
    public account(): AccountTag
    {
        return new AccountTag(
            this.httpClient,
            this.parser
        );
    }

    public transaction(): TransactionTag
    {
        return new TransactionTag(
            this.httpClient,
            this.parser
        );
    }

    public subscription(): SubscriptionTag
    {
        return new SubscriptionTag(
            this.httpClient,
            this.parser
        );
    }

    public scope(): ScopeTag
    {
        return new ScopeTag(
            this.httpClient,
            this.parser
        );
    }

    public plan(): PlanTag
    {
        return new PlanTag(
            this.httpClient,
            this.parser
        );
    }

    public payment(): PaymentTag
    {
        return new PaymentTag(
            this.httpClient,
            this.parser
        );
    }

    public page(): PageTag
    {
        return new PageTag(
            this.httpClient,
            this.parser
        );
    }

    public log(): LogTag
    {
        return new LogTag(
            this.httpClient,
            this.parser
        );
    }

    public grant(): GrantTag
    {
        return new GrantTag(
            this.httpClient,
            this.parser
        );
    }

    public event(): EventTag
    {
        return new EventTag(
            this.httpClient,
            this.parser
        );
    }

    public app(): AppTag
    {
        return new AppTag(
            this.httpClient,
            this.parser
        );
    }



}
